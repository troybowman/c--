
.data

.text

_func:

  # |--------------------------------|
  # |           <padding>            |
  # |--------------------------------| sp+84
  # |            section             |
  # |--------------------------------| sp+80
  # |             frame              |
  # |--------------------------------| sp+60
  # |              var               |
  # |--------------------------------| sp+56
  # |             local              |
  # |--------------------------------| sp+44
  # |              our               |
  # |--------------------------------| sp+40
  # |               of               |
  # |--------------------------------| sp+16
  # |              test              |
  # |--------------------------------| sp+12
  # |               a                |
  # |--------------------------------| sp+8
  # |               is               |
  # |--------------------------------| sp+4
  # |              this              |
  # |--------------------------------| sp+0
  la $sp, -88($sp)


__leave_func:
  la $sp, 88($sp)
  jr $ra

_simple:

  # |--------------------------------|
  # |        <four is in $a3>        |
  # |--------------------------------| sp+12
  # |       <three is in $a2>        |
  # |--------------------------------| sp+8
  # |        <two is in $a1>         |
  # |--------------------------------| sp+4
  # |        <one is in $a0>         |
  # |--------------------------------| sp+0  <-- start of caller's frame


__leave_simple:
  jr $ra

_another:

  # |--------------------------------|
  # |              $a3               |
  # |--------------------------------| sp+60
  # |              $a2               |
  # |--------------------------------| sp+56
  # |              two               |
  # |--------------------------------| sp+52
  # |              one               |
  # |--------------------------------| sp+48  <-- start of caller's frame
  # |           <padding>            |
  # |--------------------------------| sp+44
  # |             array3             |
  # |--------------------------------| sp+32
  # |             array2             |
  # |--------------------------------| sp+32
  # |             array1             |
  # |--------------------------------| sp+28
  # |             array              |
  # |--------------------------------| sp+24
  # |           <padding>            |
  # |--------------------------------| sp+20
  # |              $ra               |
  # |--------------------------------| sp+16
  # |     <minimum 4 arg slots>      |
  # |--------------------------------| sp+0
  la $sp, -48($sp)
  sw $ra, 16($sp)
  sw $a0, 48($sp)
  sw $a1, 52($sp)
  sw $a2, 56($sp)
  sw $a3, 60($sp)

  li $t0, 1
  li $t1, 2
  li $t2, 3
  li $t3, 4
  move $a3, $t3
  move $a2, $t2
  move $a1, $t1
  move $a0, $t0
  jal _simple

__leave_another:
  lw $a3, 60($sp)
  lw $a2, 56($sp)
  lw $a1, 52($sp)
  lw $a0, 48($sp)
  lw $ra, 16($sp)
  la $sp, 48($sp)
  jr $ra

main:

  # |--------------------------------|


__leavemain:
  jal __exit

__print_string:
  li $v0, 4
  syscall
  jr $ra

__print_int:
  li $v0, 1
  syscall
  jr $ra

__print_char:
  li $v0, 11
  syscall
  jr $ra

__print_hex:
  li $v0, 34
  syscall
  jr $ra

__exit:
  li $v0, 10
  syscall
  jr $ra
