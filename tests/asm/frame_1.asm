
.data

.text

_f0:

  # |--------------------------------|
  # |        <one is in $a0>         |
  # |--------------------------------| sp+0  <-- start of caller's frame


__leave_f0:
  jr $ra

_f1:

  # |--------------------------------|
  # |              $a0               |
  # |--------------------------------| sp+24  <-- start of caller's frame
  # |           <padding>            |
  # |--------------------------------| sp+20
  # |              $ra               |
  # |--------------------------------| sp+16
  # |     <minimum 4 arg slots>      |
  # |--------------------------------| sp+0
  la $sp, -24($sp)
  sw $ra, 16($sp)
  sw $a0, 24($sp)

  li $t0, 1
  move $a0, $t0
  jal _f0

__leave_f1:
  lw $a0, 24($sp)
  lw $ra, 16($sp)
  la $sp, 24($sp)
  jr $ra

_f2:

  # |--------------------------------|
  # |        <two is in $a1>         |
  # |--------------------------------| sp+4
  # |        <one is in $a0>         |
  # |--------------------------------| sp+0  <-- start of caller's frame


__leave_f2:
  jr $ra

_f3:

  # |--------------------------------|
  # |              $a1               |
  # |--------------------------------| sp+28
  # |              $a0               |
  # |--------------------------------| sp+24  <-- start of caller's frame
  # |           <padding>            |
  # |--------------------------------| sp+20
  # |              $ra               |
  # |--------------------------------| sp+16
  # |     <minimum 4 arg slots>      |
  # |--------------------------------| sp+0
  la $sp, -24($sp)
  sw $ra, 16($sp)
  sw $a0, 24($sp)
  sw $a1, 28($sp)

  li $t0, 1
  li $t1, 2
  move $a1, $t1
  move $a0, $t0
  jal _f2

__leave_f3:
  lw $a1, 28($sp)
  lw $a0, 24($sp)
  lw $ra, 16($sp)
  la $sp, 24($sp)
  jr $ra

_f4:

  # |--------------------------------|
  # |       <three is in $a2>        |
  # |--------------------------------| sp+8
  # |        <two is in $a1>         |
  # |--------------------------------| sp+4
  # |        <one is in $a0>         |
  # |--------------------------------| sp+0  <-- start of caller's frame


__leave_f4:
  jr $ra

_f5:

  # |--------------------------------|
  # |              $a2               |
  # |--------------------------------| sp+32
  # |              $a1               |
  # |--------------------------------| sp+28
  # |              $a0               |
  # |--------------------------------| sp+24  <-- start of caller's frame
  # |           <padding>            |
  # |--------------------------------| sp+20
  # |              $ra               |
  # |--------------------------------| sp+16
  # |     <minimum 4 arg slots>      |
  # |--------------------------------| sp+0
  la $sp, -24($sp)
  sw $ra, 16($sp)
  sw $a0, 24($sp)
  sw $a1, 28($sp)
  sw $a2, 32($sp)

  li $t0, 1
  li $t1, 2
  li $t2, 3
  move $a2, $t2
  move $a1, $t1
  move $a0, $t0
  jal _f4

__leave_f5:
  lw $a2, 32($sp)
  lw $a1, 28($sp)
  lw $a0, 24($sp)
  lw $ra, 16($sp)
  la $sp, 24($sp)
  jr $ra

_f6:

  # |--------------------------------|
  # |        <four is in $a3>        |
  # |--------------------------------| sp+12
  # |       <three is in $a2>        |
  # |--------------------------------| sp+8
  # |        <two is in $a1>         |
  # |--------------------------------| sp+4
  # |        <one is in $a0>         |
  # |--------------------------------| sp+0  <-- start of caller's frame


__leave_f6:
  jr $ra

_f7:

  # |--------------------------------|
  # |              $a3               |
  # |--------------------------------| sp+36
  # |              $a2               |
  # |--------------------------------| sp+32
  # |              $a1               |
  # |--------------------------------| sp+28
  # |              $a0               |
  # |--------------------------------| sp+24  <-- start of caller's frame
  # |           <padding>            |
  # |--------------------------------| sp+20
  # |              $ra               |
  # |--------------------------------| sp+16
  # |     <minimum 4 arg slots>      |
  # |--------------------------------| sp+0
  la $sp, -24($sp)
  sw $ra, 16($sp)
  sw $a0, 24($sp)
  sw $a1, 28($sp)
  sw $a2, 32($sp)
  sw $a3, 36($sp)

  li $t0, 1
  li $t1, 2
  li $t2, 3
  li $t3, 4
  move $a3, $t3
  move $a2, $t2
  move $a1, $t1
  move $a0, $t0
  jal _f6

__leave_f7:
  lw $a3, 36($sp)
  lw $a2, 32($sp)
  lw $a1, 28($sp)
  lw $a0, 24($sp)
  lw $ra, 16($sp)
  la $sp, 24($sp)
  jr $ra

_f8:

  # |--------------------------------|
  # |              five              |
  # |--------------------------------| sp+16
  # |        <four is in $a3>        |
  # |--------------------------------| sp+12
  # |       <three is in $a2>        |
  # |--------------------------------| sp+8
  # |        <two is in $a1>         |
  # |--------------------------------| sp+4
  # |        <one is in $a0>         |
  # |--------------------------------| sp+0  <-- start of caller's frame


__leave_f8:
  jr $ra

_f9:

  # |--------------------------------|
  # |              $a3               |
  # |--------------------------------| sp+36
  # |              $a2               |
  # |--------------------------------| sp+32
  # |              $a1               |
  # |--------------------------------| sp+28
  # |              $a0               |
  # |--------------------------------| sp+24  <-- start of caller's frame
  # |              $ra               |
  # |--------------------------------| sp+20
  # |           <stkarg 0>           |
  # |--------------------------------| sp+16
  # |     <minimum 4 arg slots>      |
  # |--------------------------------| sp+0
  la $sp, -24($sp)
  sw $ra, 20($sp)
  sw $a0, 24($sp)
  sw $a1, 28($sp)
  sw $a2, 32($sp)
  sw $a3, 36($sp)

  li $t0, 1
  li $t1, 2
  li $t2, 3
  li $t3, 4
  li $t4, 5
  sw $t4, 16($sp)
  move $a3, $t3
  move $a2, $t2
  move $a1, $t1
  move $a0, $t0
  jal _f8

__leave_f9:
  lw $a3, 36($sp)
  lw $a2, 32($sp)
  lw $a1, 28($sp)
  lw $a0, 24($sp)
  lw $ra, 20($sp)
  la $sp, 24($sp)
  jr $ra

_f10:

  # |--------------------------------|
  # |              six               |
  # |--------------------------------| sp+20
  # |              five              |
  # |--------------------------------| sp+16
  # |        <four is in $a3>        |
  # |--------------------------------| sp+12
  # |       <three is in $a2>        |
  # |--------------------------------| sp+8
  # |        <two is in $a1>         |
  # |--------------------------------| sp+4
  # |        <one is in $a0>         |
  # |--------------------------------| sp+0  <-- start of caller's frame


__leave_f10:
  jr $ra

_f11:

  # |--------------------------------|
  # |              $a3               |
  # |--------------------------------| sp+44
  # |              $a2               |
  # |--------------------------------| sp+40
  # |              $a1               |
  # |--------------------------------| sp+36
  # |              $a0               |
  # |--------------------------------| sp+32  <-- start of caller's frame
  # |           <padding>            |
  # |--------------------------------| sp+28
  # |              $ra               |
  # |--------------------------------| sp+24
  # |           <stkarg 1>           |
  # |--------------------------------| sp+20
  # |           <stkarg 0>           |
  # |--------------------------------| sp+16
  # |     <minimum 4 arg slots>      |
  # |--------------------------------| sp+0
  la $sp, -32($sp)
  sw $ra, 24($sp)
  sw $a0, 32($sp)
  sw $a1, 36($sp)
  sw $a2, 40($sp)
  sw $a3, 44($sp)

  li $t0, 1
  li $t1, 2
  li $t2, 3
  li $t3, 4
  li $t4, 5
  li $t5, 6
  sw $t5, 20($sp)
  sw $t4, 16($sp)
  move $a3, $t3
  move $a2, $t2
  move $a1, $t1
  move $a0, $t0
  jal _f10

__leave_f11:
  lw $a3, 44($sp)
  lw $a2, 40($sp)
  lw $a1, 36($sp)
  lw $a0, 32($sp)
  lw $ra, 24($sp)
  la $sp, 32($sp)
  jr $ra

_f12:

  # |--------------------------------|
  # |             seven              |
  # |--------------------------------| sp+24
  # |              six               |
  # |--------------------------------| sp+20
  # |              five              |
  # |--------------------------------| sp+16
  # |        <four is in $a3>        |
  # |--------------------------------| sp+12
  # |       <three is in $a2>        |
  # |--------------------------------| sp+8
  # |        <two is in $a1>         |
  # |--------------------------------| sp+4
  # |        <one is in $a0>         |
  # |--------------------------------| sp+0  <-- start of caller's frame


__leave_f12:
  jr $ra

_f13:

  # |--------------------------------|
  # |              $a3               |
  # |--------------------------------| sp+44
  # |              $a2               |
  # |--------------------------------| sp+40
  # |              $a1               |
  # |--------------------------------| sp+36
  # |              $a0               |
  # |--------------------------------| sp+32  <-- start of caller's frame
  # |              $ra               |
  # |--------------------------------| sp+28
  # |           <stkarg 2>           |
  # |--------------------------------| sp+24
  # |           <stkarg 1>           |
  # |--------------------------------| sp+20
  # |           <stkarg 0>           |
  # |--------------------------------| sp+16
  # |     <minimum 4 arg slots>      |
  # |--------------------------------| sp+0
  la $sp, -32($sp)
  sw $ra, 28($sp)
  sw $a0, 32($sp)
  sw $a1, 36($sp)
  sw $a2, 40($sp)
  sw $a3, 44($sp)

  li $t0, 1
  li $t1, 2
  li $t2, 3
  li $t3, 4
  li $t4, 5
  li $t5, 6
  li $t6, 7
  sw $t6, 24($sp)
  sw $t5, 20($sp)
  sw $t4, 16($sp)
  move $a3, $t3
  move $a2, $t2
  move $a1, $t1
  move $a0, $t0
  jal _f12

__leave_f13:
  lw $a3, 44($sp)
  lw $a2, 40($sp)
  lw $a1, 36($sp)
  lw $a0, 32($sp)
  lw $ra, 28($sp)
  la $sp, 32($sp)
  jr $ra

main:

  # |--------------------------------|


__leavemain:
  jal __exit

__print_string:
  li $v0, 4
  syscall
  jr $ra

__print_int:
  li $v0, 1
  syscall
  jr $ra

__print_char:
  li $v0, 11
  syscall
  jr $ra

__print_hex:
  li $v0, 34
  syscall
  jr $ra

__exit:
  li $v0, 10
  syscall
  jr $ra
